<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zikgu.example.mapper.UserMapper">
 <!-- 권한 읽기 -->
    <select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
       SELECT         u_auth
       FROM         lc_auth
       WHERE          1=1
       AND            u_id = #{username}
    </select>

   <!-- 회원 불러오기 -->
   <select id="readUser" parameterType="String" resultType="User">
      SELECT         u_id                 						    as   username,
			                 u_password             					as password,
			                 u_name                						as   uName,
			                 u_isAccountNonExpired        as isAccountNonExpired,
			                 u_isAccountNonLocked    	    as isAccountNonLocked,
			                 u_isCredentialNonExpired    as isCredentialsNonExpired,
			                 u_isEnabled          				    as isEnabled,
			                 u_key                                  as u_key,
			                 u_trainercheck                         as u_trainercheck
      FROM         lc_user
      WHERE         1=1
      AND            u_id   =   #{username}
   </select>
   
 
   

   
     <!-- 회원 불러오기 -->
   <select id="getUserdetail" parameterType="String" resultType="User">
      SELECT         u_id                 						    as   username,
			                 u_password             					as password,
			                 u_name                						as   uName,
			                 u_isAccountNonExpired        as isAccountNonExpired,
			                 u_isAccountNonLocked    	    as isAccountNonLocked,
			                 u_isCredentialNonExpired    as isCredentialsNonExpired,
			                 u_isEnabled          				    as isEnabled,
			                 u_key                                  as u_key,
			                 u_trainercheck                         as u_trainercheck,
			                 u_phone                                 as phone
      FROM         lc_user
     
      WHERE            u_key   =   #{u_key}
   </select>
   
   
   <!-- 회원 등록 -->
   <insert id="createUser" parameterType="User">
      INSERT INTO lc_user (
         u_id,
         u_password,
         u_name,
         u_isAccountNonExpired,
         u_isAccountNonLocked,
         u_isCredentialNonExpired,
         u_isEnabled,
         u_phone
      ) VALUES (
         #{username},
         #{password},
         #{uName},
         #{isAccountNonExpired},
         #{isAccountNonLocked},
         #{isCredentialsNonExpired},
         #{isEnabled},
         #{phone}
      )
   </insert>   
   
   <!-- 트레이너 회원 등록 -->
   <insert id="createUserTrainer" parameterType="User">
      INSERT INTO lc_user (
         u_id,
         u_password,
         u_name,
         u_isAccountNonExpired,
         u_isAccountNonLocked,
         u_isCredentialNonExpired,
         u_isEnabled,
         u_phone,
         u_trainercheck
      ) VALUES (
         #{username},
         #{password},
         #{uName},
         #{isAccountNonExpired},
         #{isAccountNonLocked},
         #{isCredentialsNonExpired},
         #{isEnabled},
         #{phone},
        
         #1
      )
   </insert> 
   
    <!-- 유저 권한 추가 -->
    <insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
       INSERT INTO lc_auth (
          u_id,
          u_auth
       ) VALUES
         <foreach item="authority" index="index" collection="authorities" separator=",">
            (#{username}, #{authority.role})
         </foreach>
         ON DUPLICATE KEY
         UPDATE
            u_id = #{username}
    </insert>
    
    
      <!-- 유저 비밀번호 수정 -->
	        <update id="updateUser" parameterType="center">
			    UPDATE lc_user  SET
			    u_password =  #{password}
			    
			    WHERE u_key = #{u_key}
    		</update>
    		
    		
      <!-- 유저 이름 수정 -->
	        <update id="usernameModify" parameterType="center">
			    UPDATE lc_user  SET
			    u_name =  #{uName}
			    
			    WHERE u_key = #{u_key} 
    		</update>		
    		
    		
    		<!-- 유저 삭제 -->
    		<delete id="getUserdelete" parameterType="center">
    			DELETE FROM lc_user WHERE u_key = #{u_key} 
    		
    		</delete>
    		
    		
    		
    		<!-- 유저AUTH 삭제 -->
    		<delete id="getUserdeleteAuth" parameterType="center">
    			DELETE FROM lc_auth WHERE u_id = #{u_id} 
    		
    		</delete>
    		
    		
    		
</mapper>
