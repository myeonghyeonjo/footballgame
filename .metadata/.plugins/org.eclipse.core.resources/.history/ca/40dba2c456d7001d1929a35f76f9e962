package com.zikgu.example.service;
import java.util.HashMap;
import java.util.List;

import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;


import com.zikgu.example.domain.Board;
import com.zikgu.example.domain.TrainerProfile;
import com.zikgu.example.mapper.BoardMapper;

import net.nurigo.java_sdk.api.Message;
import net.nurigo.java_sdk.exceptions.CoolsmsException;

@Service("BoardServiceImpl")
public class BoardServiceImpl implements BoardService {

	@Autowired BoardMapper boardmapper;
	@Override
	public List<Board> selectBoardList() {
		return boardmapper.selectBoardList();
	}
	
	@Override
	public void certifiedPhoneNumber(String userPhoneNumber, int randomNumber) {
		String api_key = "NCSR8XIJNVJCA2T7";
	    String api_secret = "Q3MSASRSQ160X1VTCYHFTKSNR3VY8ROT";
	    Message coolsms = new Message(api_key, api_secret);

	    // 4 params(to, from, type, text) are mandatory. must be filled
	    HashMap<String, String> params = new HashMap<String, String>();
	    params.put("to", userPhoneNumber);    // 수신전화번호
	    params.put("from", "01030027241");    // 발신전화번호. 테스트시에는 발신,수신 둘다 본인 번호로 하면 됨
	    params.put("type", "SMS");
	    params.put("text", "[TEST] 인증번호는" + "["+randomNumber+"]" + "입니다."); // 문자 내용 입력
	    params.put("app_version", "test app 1.2"); // application name and version

	    try {
	        JSONObject obj = (JSONObject) coolsms.send(params);
	        System.out.println(obj.toString());
	      } catch (CoolsmsException e) {
	        System.out.println(e.getMessage());
	        System.out.println(e.getCode());
	      }
	    
	}
	
	@Override
	public int nameCheck(String sm_name) {
		return boardmapper.nameCheck(sm_name);
	}
	
	@Override
	public int idCheck(String sm_id) {
		return boardmapper.idCheck(sm_id);
	}
	
	@Override
	public int phoneCheck(String phone) {
		return boardmapper.phoneCheck(phone);
	}
	
	@Override
	public void trainerInfoinsert(TrainerProfile trainerprofile) {
		 boardmapper.trainerInfoinsert(trainerprofile);
	}
	
	@Override
	public int gettf_id(TrainerProfile trainerprofile) {
		return boardmapper.gettf_id(trainerprofile);
	}

}


